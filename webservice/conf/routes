# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

OPTIONS /api/*url                          controllers.Application.options(url: String)

GET     /                                  controllers.Assets.at(path="/public", file="index.html")
GET     /app                               controllers.Assets.at(path="/public", file="index.html")
# GET     /                                  controllers.Application.app

# Home page
GET     /api                               controllers.Application.api
GET     /api/                              controllers.Application.api

GET     /api/users                         controllers.Users.list
GET     /api/users/count                   controllers.Users.count
PUT     /api/users/:id                     controllers.Users.update(id: Long)
POST    /api/users/                        controllers.Users.save
POST    /api/users                         controllers.Users.save
GET     /api/users/:id                     controllers.Users.show(id: Long)
DELETE  /api/users/:id                     controllers.Users.delete(id: Long)

GET     /api/users/:id/subscriptions            controllers.Subscriptions.show(id: Long)
#GET     /api/users/:id/subscriptions            controllers.Subscriptions.list(id: Long)
#GET     /api/users/:id/subscriptions/count      controllers.Subscriptions.count(id: Long)
POST    /api/users/:id/subscriptions            controllers.Subscriptions.save(id: Long)
DELETE  /api/users/:id/subscriptions/:ideaId    controllers.Subscriptions.delete(id: Long, ideaId: Long)

GET     /api/users/:id/stats               controllers.Users.stats(id: Long)
GET     /api/users/:id/votes               controllers.Users.votes(id: Long)

GET     /api/ideas                         controllers.Ideas.list
GET     /api/ideas/count                   controllers.Ideas.count
PUT     /api/ideas/:id                     controllers.Ideas.update(id: Long)
POST    /api/ideas/                        controllers.Ideas.save
POST    /api/ideas                         controllers.Ideas.save
GET     /api/ideas/:id                     controllers.Ideas.show(id: Long)
DELETE  /api/ideas/:id                     controllers.Ideas.delete(id: Long)
PUT     /api/ideas/:id/up                  controllers.Ideas.up(id: Long)
PUT     /api/ideas/:id/down                controllers.Ideas.down(id: Long)

GET     /api/ideas/:id/subscribers            controllers.Subscribers.list(id: Long)
GET     /api/ideas/:id/subscribers/count      controllers.Subscribers.count(id: Long)
POST    /api/ideas/:id/subscribers            controllers.Subscribers.save(id: Long)
DELETE  /api/ideas/:id/subscribers/:userId    controllers.Subscribers.delete(id: Long, userId: Long)

GET     /api/comments                  controllers.Comments.listAll()
GET     /api/ideas/:idea/comments            controllers.Comments.list(idea: Long)
# GET     /api/ideas/:idea/comments/count      controllers.Comments.count(idea: Long)
# PUT     /api/ideas/:idea/comments/:id        controllers.Comments.update(idea: Long, id: Long)
POST    /api/ideas/:idea/comment/               controllers.Comments.save(idea: Long)
POST    /api/ideas/:idea/comment              controllers.Comments.save(idea: Long)
GET     /api/ideas/comments/:id               controllers.Comments.show(id: Long)
# GET     /api/ideas/:idea/comments/:id        controllers.Comments.show(idea:Long, id: Long)
# DELETE  /api/ideas/:idea/comments/:id        controllers.Comments.delete(idea: Long, id: Long)
PUT     /api/ideas/:idea/comments/:id/up       controllers.Comments.up(idea: Long, id: Long)
PUT     /api/ideas/:idea/comments/:id/down     controllers.Comments.down(idea: Long, id: Long)

# get all te tags of the idea as an array of tags
GET     /api/ideas/:idea/tags                          controllers.Ideas.listTags(idea: Long)
GET     /api/ideas/:idea/tags/count                    controllers.Ideas.countTags(idea: Long)
# receives an array of tags, updates them all, adding, removing and creating tags as necessary
PUT     /api/ideas/:idea/tags/                         controllers.Ideas.updateTags(idea: Long)
PUT     /api/ideas/:idea/tags                          controllers.Ideas.updateTags(idea: Long)
# receives a string with a single tag
POST    /api/ideas/:idea/tags/:tag                     controllers.Ideas.saveTag(idea: Long, tag: String)
DELETE  /api/ideas/:idea/tags/:tag                     controllers.Ideas.deleteTag(idea: Long, tag: String)

GET     /api/types                         controllers.IdeaTypes.list
GET     /api/types/count                   controllers.IdeaTypes.count
PUT     /api/types/:id                     controllers.IdeaTypes.update(id: Long)
POST    /api/types/                        controllers.IdeaTypes.save
POST    /api/types                         controllers.IdeaTypes.save
GET     /api/types/:id                     controllers.IdeaTypes.show(id: Long)
DELETE  /api/types/:id                     controllers.IdeaTypes.delete(id: Long)
GET     /api/tags                          controllers.Tags.list
#GET     /api/tags/count                    controllers.Tags.count
PUT     /api/tags/:id                      controllers.Tags.update(id: Long)
POST    /api/tags/                         controllers.Tags.save
POST    /api/tags                          controllers.Tags.save
GET     /api/tags/:id                      controllers.Tags.show(id: Long)
DELETE  /api/tags/:id                      controllers.Tags.delete(id: Long)
GET     /api/tags/$id<[0-9]+>/ideas        controllers.Tags.listIdeasByTagId(id: Long)
GET     /api/tags/:tag/ideas               controllers.Tags.listIdeas(tag: String)
GET     /api/tags/$id<[0-9]+>/ideas/count  controllers.Tags.countIdeasByTagId(id: Long)
GET     /api/tags/:tag/ideas/count         controllers.Tags.countIdeas(tag: String)

GET     /api/votes                         controllers.Votes.list
GET     /api/votes/count                   controllers.Votes.count
PUT     /api/votes/:id                     controllers.Votes.update(id: Long)
POST    /api/votes/                        controllers.Votes.save
POST    /api/votes                         controllers.Votes.save
GET     /api/votes/:id                     controllers.Votes.show(id: Long)
DELETE  /api/votes/:id                     controllers.Votes.delete(id: Long)

# Javascript routing
GET     /assets/javascripts/routes         controllers.Application.javascriptRoutes

# Map static resources from the /public folder to the /assets URL path
GET     /*file                   controllers.Assets.at(path="/public", file)
